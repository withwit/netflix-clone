{"version":3,"sources":["request.js","axios.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchNetflixOriginal","fetchTrending","fetchTopRated","fetchAiringToday","fetchTrendingPerson","fetchTrendingMonthly","fetchTrendingShows","fetchTrendingMovies","instance","axios","create","baseURL","opts","height","width","playerVars","autoplay","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","profile_path","alt","name","id","videoId","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae7befba.chunk.js","sourcesContent":["const API_KEY = \"c377344a7a925e99a3012c76d25d70ba\";\r\n\r\nconst requests = {\r\n  fetchNetflixOriginal: `/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`,\r\n  fetchTrending: `/trending/all/day?api_key=${API_KEY}`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US&page=2`,\r\n  fetchAiringToday: `/movie/top_rated?api_key=${API_KEY}&language=en-US&page=3`,\r\n  fetchTrendingPerson: `/trending/person/week?api_key=${API_KEY}`,\r\n  fetchTrendingMonthly: `/trending/all/week?api_key=${API_KEY}`,\r\n  fetchTrendingShows: `/trending/tv/week?api_key=${API_KEY}`,\r\n  fetchTrendingMovies: `/trending/movie/week?api_key=${API_KEY}`,\r\n};\r\nexport default requests;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\nconst opts = {\r\n  height: \"390\",\r\n  width: \"100%\",\r\n  playerVars: {\r\n    autoplay: 1,\r\n  },\r\n};\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow = \"\" }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h1>{title}</h1>\r\n\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              movie.poster_path\r\n                ? isLargeRow\r\n                  ? movie.poster_path\r\n                  : movie.backdrop_path\r\n                : movie.profile_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport requests from \"./request\";\r\nimport axios from \"./axios\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchTrending);\r\n\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`,\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 200)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner__fadBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"netflix__logo\"\r\n        src=\" https://logos-download.com/wp-content/uploads/2016/03/Netflix_logo.png\"\r\n        alt=\"logo\"\r\n      />\r\n      <img\r\n        className=\"user__avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/1bdc9a33850498.56ba69ac2ba5b.png\"\r\n        alt=\"user-logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\nimport requests from \"./request\";\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginal}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row\n        title=\"Trending Personalities\"\n        fetchUrl={requests.fetchTrendingPerson}\n      />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Trending Monthly\" fetchUrl={requests.fetchTrendingMonthly} />\n      <Row title=\"Airing Today\" fetchUrl={requests.fetchAiringToday} />\n      <Row title=\"Trending Shows\" fetchUrl={requests.fetchTrendingShows} />\n      <Row title=\"Trending Movies\" fetchUrl={requests.fetchTrendingMovies} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}